/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

/** Landing

  - Viewport Units
    @see http://caniuse.com/#feat=viewport-units
  - Custom Properties
    @see http://caniuse.com/#feat=css-variables
 */
/** Colors */
/** Typography */
/** Animate Base */
.animated {
  -webkit-animation-duration: .5s;
          animation-duration: .5s;
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both; }

/** Animate Function */
@-webkit-keyframes fadeInLeft {
  from {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
            transform: translate3d(-100%, 0, 0); }
  to {
    opacity: 1;
    -webkit-transform: none;
            transform: none; } }
@keyframes fadeInLeft {
  from {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
            transform: translate3d(-100%, 0, 0); }
  to {
    opacity: 1;
    -webkit-transform: none;
            transform: none; } }

.fadeInLeft {
  -webkit-animation-name: fadeInLeft;
          animation-name: fadeInLeft; }

@-webkit-keyframes fadeInRight {
  from {
    opacity: 0;
    -webkit-transform: translate3d(100%, 0, 0);
            transform: translate3d(100%, 0, 0); }
  to {
    opacity: 1;
    -webkit-transform: none;
            transform: none; } }

@keyframes fadeInRight {
  from {
    opacity: 0;
    -webkit-transform: translate3d(100%, 0, 0);
            transform: translate3d(100%, 0, 0); }
  to {
    opacity: 1;
    -webkit-transform: none;
            transform: none; } }

.fadeInRight {
  -webkit-animation-name: fadeInRight;
          animation-name: fadeInRight; }

:root {
  --row-display: block;
  --col-grow: 1; }

@media screen and (min-width: 768px) {
  :root {
    --row-display: flex; } }

.col-1 {
  --col-grow: 1; }

.col-2 {
  --col-grow: 1.09; }

.col-3 {
  --col-grow: 1.2; }

.col-4 {
  --col-grow: 1.333; }

.col-5 {
  --col-grow: 1.5; }

.col-6 {
  --col-grow: 1.714; }

.col-7 {
  --col-grow: 2; }

.col-8 {
  --col-grow: 2.4; }

.col-9 {
  --col-grow: 3; }

.col-10 {
  --col-grow: 4; }

.col-11 {
  --col-grow: 6; }

.col-12 {
  --col-grow: 12; }

.row {
  display: var(--row-display); }

.col-1,
.col-2,
.col-3,
.col-4,
.col-5,
.col-6,
.col-7,
.col-8,
.col-9,
.col-10,
.col-11,
.col-12,
.col {
  -ms-flex-preferred-size: 100%;
      flex-basis: 100%;
  -webkit-box-flex: var(--col-grow);
      -ms-flex-positive: var(--col-grow);
          flex-grow: var(--col-grow); }

.container {
  max-width: 970px;
  margin-left: auto;
  margin-right: auto;
  padding: 0 12px; }

body {
  margin: 0;
  background-color: #210002;
  color: #ffaf1b;
  font-size: 50px;
  font-family: "Yanone Kaffeesatz", "Helvetica Neue", Helvetica, Arial, sans-serif; }

a {
  color: #ffaf1b; }

.navbar {
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  z-index: 1030;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end;
  margin-top: 15px;
  margin-bottom: 15px;
  padding: 0 24px; }

:root {
  /** ratio: 3:4
      height = height-bar * 5
      width = ( 4 * height ) / 3
   */
  --hamburger-bar-height: 9px;
  --hamburger-height: calc(var(--hamburger-bar-height) * 5);
  --hamburger-width: calc(4 * var(--hamburger-height) / 3); }

@media screen and (max-width: 768px) {
  :root {
    --hamburger-bar-height: 7px; } }

.hamburger {
  width: var(--hamburger-width);
  height: var(--hamburger-height);
  position: absolute;
  -webkit-transform: rotate(0deg);
          transform: rotate(0deg);
  -webkit-transition: .5s ease-in-out;
  transition: .5s ease-in-out;
  cursor: pointer; }
  .hamburger span {
    display: block;
    position: absolute;
    height: var(--hamburger-bar-height);
    width: 100%;
    background: #d3531a;
    opacity: 1;
    left: 0;
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
    -webkit-transition: .25s ease-in-out;
    transition: .25s ease-in-out; }
    .hamburger span:nth-child(1) {
      top: 0px; }
    .hamburger span:nth-child(2), .hamburger span:nth-child(3) {
      top: calc(var(--hamburger-bar-height) * 2); }
    .hamburger span:nth-child(4) {
      top: calc(var(--hamburger-bar-height) * 4); }
    .hamburger span:nth-child(5) {
      position: relative;
      width: 0%;
      border: solid transparent;
      border-width: 0 var(--hamburger-bar-height) var(--hamburger-bar-height) 0;
      display: inline-block;
      -webkit-transform: rotate(135deg);
              transform: rotate(135deg);
      background-color: transparent;
      left: calc(var(--hamburger-bar-height) * 2); }
  .hamburger.open span:nth-child(1), .hamburger.open span:nth-child(4) {
    top: calc(var(--hamburger-bar-height) * 2);
    width: 0%;
    left: 50%; }
  .hamburger.open span:nth-child(2) {
    -webkit-transform: rotate(45deg);
            transform: rotate(45deg); }
  .hamburger.open span:nth-child(3) {
    -webkit-transform: rotate(-45deg);
            transform: rotate(-45deg); }
  .hamburger.back span:nth-child(1), .hamburger.back span:nth-child(2), .hamburger.back span:nth-child(3), .hamburger.back span:nth-child(4) {
    top: calc(var(--hamburger-bar-height) * 2);
    width: 0%;
    left: 50%; }
  .hamburger.back span:nth-child(5) {
    width: calc(var(--hamburger-bar-height) * 3);
    height: calc(var(--hamburger-bar-height) * 3);
    border-color: #d3531a; }

:root {
  --display-parallax: block;
  --display-no-parallax: none; }

@media screen and (max-width: 768px) {
  :root {
    --display-parallax: none;
    --display-no-parallax: block; } }

.parallax {
  display: var(--display-parallax);
  position: relative;
  height: 100vh;
  overflow: hidden; }
  .parallax__layer {
    background-position: top center;
    background-size: cover;
    background-repeat: no-repeat;
    width: 100%;
    height: 100vh;
    position: fixed;
    z-index: -1; }
    .parallax__layer--0 {
      background-image: url("./../images/BG.png"); }
    .parallax__layer--1 {
      background-image: url("./../images/1.png"); }
    .parallax__layer--2 {
      background-image: url("./../images/2.png"); }
    .parallax__layer--3 {
      background-image: url("./../images/3.png"); }
    .parallax__layer--4 {
      background-image: url("./../images/4.png"); }
    .parallax__layer--5 {
      background-image: url("./../images/5.png"); }
    .parallax__layer--6 {
      background-image: url("./../images/6.png"); }
    .parallax__layer--7 {
      background-image: url("./../images/7.png"); }

.no-parallax {
  display: var(--display-no-parallax);
  background: url("./../images/full.bg.jpg") no-repeat 65% top/cover;
  height: 100vh; }

.main-content {
  background-color: #210002;
  padding-top: 100px;
  padding-bottom: 100px; }

.youtube-video {
  position: relative;
  display: block;
  height: 0;
  padding: 0;
  overflow: hidden;
  padding-bottom: 56.25%; }
  .youtube-video iframe {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    height: 100%;
    width: 100%;
    border: 0; }

.google-map__wrapper {
  max-width: 1200px;
  padding: 30px 0; }
  .google-map__wrapper .google-map {
    width: 100%;
    height: 470px; }
    @media (max-width: 768px) {
      .google-map__wrapper .google-map {
        height: 350px; } }

.gallery img {
  display: block;
  width: 100%;
  height: auto; }

.gallery .gallery__item {
  padding: 25px; }
  .gallery .gallery__item:first-child {
    padding-left: 0; }
  .gallery .gallery__item:last-child {
    padding-right: 0; }

.menu-content {
  position: fixed;
  visibility: hidden;
  opacity: 0;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(33, 0, 2, 0.8);
  font-size: 50px;
  text-transform: uppercase;
  text-align: center;
  -webkit-transition: opacity .25s ease-in;
  transition: opacity .25s ease-in;
  overflow-x: hidden;
  overflow-y: scroll; }
  .menu-content.open {
    visibility: visible;
    opacity: 1; }
  .menu-content__inner {
    height: 100%;
    width: 100%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center; }
  .menu-content ul {
    list-style: none;
    padding-left: 0; }
    .menu-content ul li {
      padding: 15px; }
  .menu-content .menu-content__main,
  .menu-content .menu-content__signin,
  .menu-content .menu-content__signup {
    display: none;
    visibility: hidden; }
    .menu-content .menu-content__main.active,
    .menu-content .menu-content__signin.active,
    .menu-content .menu-content__signup.active {
      display: block;
      visibility: visible; }

.menu-content-open {
  overflow: hidden; }

.mdl-textfield {
  position: relative;
  font-size: 50px;
  display: inline-block;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  width: 300px;
  max-width: 100%;
  margin: 0;
  padding: 20px 0; }
  .mdl-textfield .mdl-button {
    position: absolute;
    bottom: 20px; }

.mdl-textfield--align-right {
  text-align: right; }

.mdl-textfield--full-width {
  width: 100%; }

.mdl-textfield--expandable {
  min-width: 32px;
  width: auto;
  min-height: 32px; }
  .mdl-textfield--expandable .mdl-button--icon {
    top: 16px; }

.mdl-textfield__input {
  border: none;
  border-bottom: 1px solid rgba(255, 227, 114, 0.12);
  display: block;
  font-size: 50px;
  font-family: "Yanone Kaffeesatz", "Helvetica Neue", Helvetica, Arial, sans-serif;
  margin: 0;
  padding: 4px 0;
  width: 100%;
  background: none;
  text-align: left;
  color: inherit; }
  .mdl-textfield__input[type="number"] {
    -moz-appearance: textfield; }
  .mdl-textfield__input[type="number"]::-webkit-inner-spin-button, .mdl-textfield__input[type="number"]::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0; }
  .mdl-textfield.is-focused .mdl-textfield__input {
    outline: none; }
  .mdl-textfield.is-invalid .mdl-textfield__input {
    border-color: rgb(213,0,0);
    -webkit-box-shadow: none;
            box-shadow: none; }
  fieldset[disabled] .mdl-textfield .mdl-textfield__input,
  .mdl-textfield.is-disabled .mdl-textfield__input {
    background-color: transparent;
    border-bottom: 1px dotted rgba(255, 227, 114, 0.12);
    color: rgba(255, 227, 114, 0.12); }

.mdl-textfield textarea.mdl-textfield__input {
  display: block; }

.mdl-textfield__label {
  bottom: 0;
  color: rgba(255, 227, 114, 0.12);
  font-size: 50px;
  left: 0;
  right: 0;
  pointer-events: none;
  position: absolute;
  display: block;
  top: 24px;
  width: 100%;
  overflow: hidden;
  white-space: nowrap;
  text-align: left; }
  .mdl-textfield.is-dirty .mdl-textfield__label,
  .mdl-textfield.has-placeholder .mdl-textfield__label {
    visibility: hidden; }
  .mdl-textfield--floating-label .mdl-textfield__label {
    -webkit-transition-duration: 0.2s;
            transition-duration: 0.2s;
    -webkit-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
            transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }
  .mdl-textfield--floating-label.has-placeholder .mdl-textfield__label {
    -webkit-transition: none;
    transition: none; }
  fieldset[disabled] .mdl-textfield .mdl-textfield__label,
  .mdl-textfield.is-disabled.is-disabled .mdl-textfield__label {
    color: rgba(255, 227, 114, 0.12); }
  .mdl-textfield--floating-label.is-focused .mdl-textfield__label,
  .mdl-textfield--floating-label.is-dirty .mdl-textfield__label,
  .mdl-textfield--floating-label.has-placeholder .mdl-textfield__label {
    color: #f7931b;
    font-size: 43px;
    top: -27px;
    visibility: visible; }
  .mdl-textfield--floating-label.is-focused .mdl-textfield__expandable-holder .mdl-textfield__label,
  .mdl-textfield--floating-label.is-dirty .mdl-textfield__expandable-holder .mdl-textfield__label,
  .mdl-textfield--floating-label.has-placeholder .mdl-textfield__expandable-holder .mdl-textfield__label {
    top: -47px; }
  .mdl-textfield--floating-label.is-invalid .mdl-textfield__label {
    color: rgb(213,0,0);
    font-size: 43px; }
  .mdl-textfield__label:after {
    background-color: #f7931b;
    bottom: 20px;
    content: '';
    height: 2px;
    left: 45%;
    position: absolute;
    -webkit-transition-duration: 0.2s;
            transition-duration: 0.2s;
    -webkit-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
            transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    visibility: hidden;
    width: 10px; }
  .mdl-textfield.is-focused .mdl-textfield__label:after {
    left: 0;
    visibility: visible;
    width: 100%; }
  .mdl-textfield.is-invalid .mdl-textfield__label:after {
    background-color: rgb(213,0,0); }

.mdl-textfield__error {
  color: rgb(213,0,0);
  position: absolute;
  font-size: 43px;
  margin-top: 3px;
  visibility: hidden;
  display: block; }
  .mdl-textfield.is-invalid .mdl-textfield__error {
    visibility: visible; }

.mdl-textfield__expandable-holder {
  display: inline-block;
  position: relative;
  margin-left: 32px;
  -webkit-transition-duration: 0.2s;
          transition-duration: 0.2s;
  -webkit-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
          transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  max-width: 0.1px; }
  .mdl-textfield.is-focused .mdl-textfield__expandable-holder, .mdl-textfield.is-dirty .mdl-textfield__expandable-holder {
    max-width: 600px; }
  .mdl-textfield__expandable-holder .mdl-textfield__label:after {
    bottom: 0; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
